import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  jobs: [
    {
      id: 1,
      start: "2025-03-25 10:00",
      type: "Scheduled",
      duration: "5 min",
      status: "Completed",
    },
    {
      id: 2,
      start: "2025-03-25 11:00",
      type: "Manual",
      duration: "7 min",
      status: "In Progress",
    },
    {
      id: 3,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    {
      id: 4,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 5,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 6,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 7,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 8,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 9,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 10,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 11,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 12,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 13,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 14,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 15,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 16,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 17,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 18,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 19,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 20,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 21,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 22,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 23,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 24,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 25,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 26,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 27,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 28,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 29,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 30,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 31,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 32,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 32,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 33,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 34,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 35,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 36,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 37,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 38,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
    ,
    {
      id: 39,
      start: "2025-03-25 12:00",
      type: "Scheduled",
      duration: "3 min",
      status: "Error",
    },
  ],
  jobSteps: [
    {
      step: "Unavailable Codes",
      startTime: "10:00 AM",
      duration: "1 min",
      status: "Completed",
    },
    {
      step: "Groups",
      startTime: "10:01 AM",
      duration: "2 min",
      status: "Completed",
    },
    {
      step: "Teams",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    {
      step: "Compaigns",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    ,
    {
      step: "Dispositions",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    ,
    {
      step: "Agents",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    ,
    {
      step: "Routing Attributes",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    ,
    {
      step: "Scripts",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    ,
    {
      step: "Skills",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    ,
    {
      step: "Skills Agent Assignments",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    {
      step: "Hours of Operation",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    {
      step: "Workflow Data",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    {
      step: "Address Books",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
    {
      step: "Points Of Contact",
      startTime: "10:03 AM",
      duration: "1 min",
      status: "Error",
    },
  ],
  lastSyncTime: null, // Store last manual sync time
};

const syncSlice = createSlice({
  name: "sync",
  initialState,
  reducers: {
    startJob: (state, action) => {
      const job = state.jobs.find((j) => j.id === action.payload);
      if (job && job.status !== "Completed") {
        job.status = "In Progress";
      }
    },
    completeJob: (state, action) => {
      const job = state.jobs.find((j) => j.id === action.payload);
      if (job) job.status = "Completed";
    },
    manualSync: (state) => {
      state.lastSyncTime = new Date().toLocaleString();
    },
  },
});

export const { startJob, completeJob, manualSync } = syncSlice.actions;
export default syncSlice.reducer;
